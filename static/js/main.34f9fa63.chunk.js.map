{"version":3,"sources":["Components/Fullpage.js","Components/DownIcon.js","sections/TitleAndSections.js","sections/AboutSections.js","Components/SkillCard.js","Components/UpScroll.js","sections/SkillSections.js","Components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","children","react_default","a","createElement","className","concat","style","backgroundColor","background","Component","DownIcon","onClick","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","data","icons","down","TitleAndSections","Fullpage_Fullpage","color","title","subtitle","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","delay","Components_DownIcon","console","log","name","AboutSections","fontColor","counter","sections","items","content","SkillCard","skill","image","UpScroll","up","width","SkillSections","eachskill","SkillCard_SkillCard","Components_UpScroll","Navigation","classID","href","App","changeColor","setState","background_first","background_second","background_third","lib_default","animationInterval","snowCharacter","vMaxY","vMaxX","src_Components_Navigation","changeTheme","alt","TitleAndSections_TitleAndSections","AboutSections_AboutSections","SkillSections_SkillSections","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34f9fa63.chunk.js","sourcesContent":["/**\r\n * Created by MOHSEN on 3/30/2019.\r\n */\r\nimport React, {Component} from 'react'\r\nimport './Fullpage.css'\r\n\r\nexport default class Fullpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        const {children} = this.props;\r\n        return (\r\n            <div className = {` fullpage ${this.props.className || ''}`} style={{backgroundColor :this.props.background}} >\r\n                {children}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport data from \"../data.json\"\r\n\r\nconst DownIcon =(props) => {\r\n    return (\r\n        <div\r\n            onClick={props.onClick}\r\n            style = {{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginBottom: \"-34px\",\r\n                transform: \"translateY(-45px)\"\r\n            }}\r\n        >\r\n            <div style = {{\r\n                maxWidth: '32px'\r\n            }} >\r\n                <img src = {data.icons.down} />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DownIcon\r\n","/**\r\n * Created by MOHSEN on 3/30/2019.\r\n */\r\nimport React, {Component} from 'react'\r\nimport Fullpage from '../Components/Fullpage'\r\nimport data from \"../data.json\"\r\nimport {SocialIcon} from 'react-social-icons';\r\nimport './TitleAndSections.css';\r\nimport DownIcon from '../Components/DownIcon'\r\nimport {Link, Element} from 'react-scroll'\r\n\r\n\r\nexport default class TitleAndSections extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className = \"first\" background={this.props.background} >\r\n                    <img className = \"profile\" src = \"img/profile.jpeg\" />\r\n                    <h1 className = \"title\" style={{ color: this.props.color }}\r\n                    >\r\n                        {data.title}\r\n                    </h1>\r\n                    <h2  style={{ color: this.props.color }}>\r\n                        {data.subtitle}\r\n                    </h2>\r\n                    <div className=\"icon-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icon\">\r\n                                    <SocialIcon url = {data.links[key]} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass = \"active\" to = \"about\" spy = {true} smooth = {true} offset = {50} duration = {500}\r\n                      delay = {0} >\r\n                    <DownIcon\r\n                        onClick = {() => console.log('im Working')}\r\n                    />\r\n                </Link>\r\n                <Element name = \"about\" className = \"element\" >\r\n                </Element>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from 'react'\r\nimport Fullpage from '../Components/Fullpage'\r\nimport data from \"../data.json\"\r\nimport './AboutSections.css'\r\nimport {Link, Element} from 'react-scroll'\r\nimport DownIcon from '../Components/DownIcon'\r\n\r\nexport default class AboutSections extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        let fontColor = [\"white\", \"#93b2ff\", \"#961955\", \"#a5cef7\"];\r\n        return (\r\n\r\n            <div  >\r\n                <Fullpage className = \"second\"  background={this.props.background} >\r\n                    <h1><b style={{color : fontColor[this.props.counter]}}>\r\n                        {data.sections[0].title}\r\n                    </b></h1>\r\n                    <p className = \"aboutText\" style={{ color: fontColor[this.props.counter] }} >\r\n                        {data.sections[0].items[0].content}\r\n                        <br/>\r\n                        {data.sections[0].items[1].content}\r\n                        <br/>\r\n                        {data.sections[0].items[2].content}\r\n                    </p>\r\n                </Fullpage>\r\n\r\n                <Link activeClass = \"active\" to = \"skils\" spy = {true} smooth = {true} offset = {50} duration = {500}\r\n                      delay = {0} >\r\n                    <DownIcon\r\n                        onClick = {() => console.log('im Working')}\r\n                    />\r\n                </Link>\r\n                <Element name = \"skils\" className = \"element\" >\r\n                </Element>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './SkillCard.css'\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const {skill} = this.props;\r\n        return (\r\n            <div className = \"card\" >\r\n                <div className = \"image-wrapper\" >\r\n                    <img  src ={skill.content.image}/>\r\n                </div>\r\n                <div className = \"skill-title-wrapper\" >\r\n                    <h3>{skill.content.title}</h3>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\"\r\n\r\nclass UpScroll extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    background: this.props.background\r\n                }}\r\n            >\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"up\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={50}\r\n                    duration={500}\r\n                    delay={0}\r\n                >\r\n                    <img\r\n                        src={data.icons.up}\r\n                        style={{\r\n                            width: \"30px\"\r\n                        }}\r\n                    />\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpScroll;","import React, {Component} from 'react'\r\nimport Fullpage from '../Components/Fullpage'\r\nimport data from \"../data.json\"\r\nimport './SkillSections.css';\r\nimport SkillCard from '../Components/SkillCard'\r\nimport UpScroll from '../Components/UpScroll'\r\n\r\n\r\nexport default class SkillSections extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <Fullpage className = \"third\" background={this.props.background}>\r\n                    <h1 ><b className = \"skillsTitle\" ><h1>{data.sections[1].title}</h1></b></h1>\r\n                    <div className = \"cards-wrapper\" >\r\n                        {data.sections[1].items.map(eachskill => {\r\n                            return (\r\n                                <SkillCard skill = {eachskill} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Fullpage>\r\n                <UpScroll background = {this.props.background} />\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./Navigation.css\";\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\" style={{ background: \"transparent\" }}>\r\n\r\n                <div classID=\"skillsNavigation\">\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to=\"skills\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={50}\r\n                        duration={500}\r\n                    >\r\n                        <a href=\"\">Skills</a>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div classID=\"aboutNavigation\">\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to=\"about\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={50}\r\n                        duration={500}\r\n                        delay={0}\r\n                    >\r\n                        <a href=\"\">About</a>\r\n                    </Link>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\nimport data from \"./data.json\"\nimport './App.css';\nimport './Components/Navigation.css';\nimport TitleAndSections from './sections/TitleAndSections'\nimport AboutSections from './sections/AboutSections'\nimport SkillSections from './sections/SkillSections'\nimport {Element} from 'react-scroll'\nimport Navigation from \"./Components/Navigation\";\nimport SnowStorm from 'react-snowstorm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: \"black\",\n            background_first: \"#c3d2e0\",\n            background_second: \"#282c34\",\n            background_third: \" #c3c8cc\",\n            counter: 0\n        };\n    }\n    changeColor = () => {\n        let fontColor = [\"#338931\", \"#961955\", \"#592121\", \"#a51b0e\"];\n        let backgroundColorFirst = [\"#faffd6\", \"#c4ffef\", \"#f7d8d7\", \"#c2d3fc\"];\n        let backgroundColorSecond = [\"#461220\", \"#011f4b\", \"#251e3e\", \"#1e1f26\"];\n        let backgroundColorThird = [\"#011f4b\", \"#1e1f26\", \"#461220\", \"#251e3e\"];\n        if (this.state.counter > 3) {\n            this.setState({\n                counter: 0,\n                color: fontColor[this.state.counter],\n                background_first: \" #c3d2e0\",\n                background_second: \" #282c34\",\n                background_third: \" #c3c8cc\"\n            });\n        } else\n            this.setState({\n                color: fontColor[this.state.counter],\n                background_first: backgroundColorFirst[this.state.counter],\n                background_second: backgroundColorSecond[this.state.counter],\n                background_third: backgroundColorThird[this.state.counter],\n                counter: this.state.counter + 1\n            });\n    };\n    render() {\n        console.log('in app js :' ,this.state.counter)\n        return (\n            <div className = \"App\" >\n                <SnowStorm animationInterval = {20} snowCharacter = {\"# m %& ^ ** @ !! ?? // **\"} vMaxY={5} vMaxX ={5}/>\n                <Element name=\"up\" className=\"element\" />\n                <Navigation />\n                <div className=\"changetheme\">\n                    <img onClick={this.changeColor} src={data.icons.changeTheme} alt=\"no img\" />\n                </div>\n                <TitleAndSections\n                    color={this.state.color}\n                    background={this.state.background_first}/>\n                <Element name=\"about\" className=\"element\" />\n                <AboutSections\n                    counter={this.state.counter}\n                    background={this.state.background_second}/>\n                <Element name=\"skills\" className=\"element\" />\n                <SkillSections\n                    color={this.state.color}\n                    background={this.state.background_third}/>\n            </div>\n    );\n    }\n    }\n\n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}